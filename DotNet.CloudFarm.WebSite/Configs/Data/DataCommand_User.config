<?xml version="1.0"?>
<dataOperations>
    <dataCommand name="GetUsers" connectionStringName="SqlServerData" commandType="Text">
        <commandText>
            <![CDATA[
select * FROM dbo.[User]
		]]>
        </commandText>
        
    </dataCommand>

  <dataCommand name="GetUserByUserId" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
select * FROM dbo.[User] where Id=@UserId;
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetUserByName" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
select * FROM dbo.[User] where Mobile=@Mobile;
		]]>
    </commandText>
    <parameters>
      <param name="@Mobile" dbType="String" direction="Input" size="25" />
    </parameters>
  </dataCommand>
  <dataCommand name="GetUserByWxOpenId" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
select * FROM dbo.[User] where WxOpenId=@WxOpenId;
		]]>
    </commandText>
    <parameters>
      <param name="@WxOpenId" dbType="String" direction="Input" size="50" />
    </parameters>
  </dataCommand>
  <dataCommand name="InsertUser" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
IF Not EXISTS(SELECT * FROM [dbo].[User] WHERE [WxOpenId] = @WxOpenId)
Begin
INSERT INTO [dbo].[User]
           ([Mobile]
           ,[WxOpenId]
           ,[WxNickName]
           ,[WxSex]
           ,[WxHeadUrl]
           ,[WxSubTime]
           ,[WxUnionId]
           ,[WxRemark]
           ,[WxGroupId]
           ,[Status]
           ,[CreateTime]
           ,[SourceId])
     VALUES
           (@Mobile
           ,@WxOpenId
           ,@WxNickName
           ,@WxSex
           ,@WxHeadUrl
           ,@WxSubTime
           ,@WxUnionId
           ,@WxRemark
           ,@WxGroupId
           ,@Status
           ,@CreateTime
           ,@SourceId);
           select @@identity;
End
		]]>
    </commandText>
    <parameters>
      <param name="@Mobile" dbType="String" direction="Input" size="25" />
      <param name="@WxOpenId" dbType="String" direction="Input" size="50" />
      <param name="@WxNickName" dbType="String" direction="Input" size="30" />
      <param name="@WxSex" dbType="Int32" direction="Input" size="4" />
      <param name="@WxHeadUrl" dbType="String" direction="Input" size="500" />
      <param name="@WxSubTime" dbType="String" direction="Input" size="15" />
      <param name="@WxUnionId" dbType="String" direction="Input" size="50" />
      <param name="@WxRemark" dbType="String" direction="Input" size="30" />
      <param name="@WxGroupId" dbType="Int32" direction="Input" size="4" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
      <param name="@CreateTime" dbType="DateTime" direction="Input" size="8" />
      <param name="@SourceId" dbType="String" direction="Input" size="10" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetUserByPageList" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select * from dbo.[User](NOLOCK)
),
PageDataSource
as 
(
select row_number() over (Order by CreateTime desc) as RowsId,*
from DataSource
)
select * from PageDataSource
where RowsId between (@PageIndex-1)*@PageSize and @PageIndex*@PageSize;
SELECT COUNT(1) FROM dbo.[User](NOLOCK)
]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>
  <dataCommand name="GetSourceUserByPageList" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select *, (select Count(SourceId) from [User](nolock) u1 where SourceId=u.ID) as SourceCount  from [User](nolock) u
),
PageDataSource
as 
(
select row_number() over (order by SourceCount desc) as RowsId,*
from DataSource
)
select * from PageDataSource
where RowsId between (@PageIndex-1)*@PageSize and @PageIndex*@PageSize;
SELECT COUNT(1) FROM dbo.[User](NOLOCK)
]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetUserByPageListAndSourceId" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select * from dbo.[User](NOLOCK) WHERE SourceId=@SourceId
),
PageDataSource
as 
(
select row_number() over (Order by CreateTime desc) as RowsId,*
from DataSource
)
select * from PageDataSource
where RowsId between (@PageIndex-1)*@PageSize and @PageIndex*@PageSize;
SELECT COUNT(1) FROM dbo.[User](NOLOCK) WHERE SourceId=@SourceId
]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
      <param name="@SourceId" dbType="String" direction="Input" size="10" />
    </parameters>
  </dataCommand>
  <dataCommand name="UpdateUserStatus" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE [dbo].[User]
   SET [Status] = @Status
 WHERE Id=@UserId
		]]>
    </commandText>
    <parameters>
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetUnUsedCaptcha" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
  select Captcha from UserCaptcha(nolock) where Mobile=@Mobile and [Status]=0;
  update UserCaptcha set SendTime=getdate() where Mobile=@Mobile;
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@Mobile" dbType="String" direction="Input" size="11" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertUserCaptcha" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
IF EXISTS(SELECT * FROM UserCaptcha WHERE Mobile = @Mobile)
BEGIN
UPDATE dbo.UserCaptcha 
SET  Captcha=@Captcha, SendTime=@SendTime,[Status]=@Status
WHERE Mobile=@Mobile
END
ELSE
BEGIN
INSERT INTO UserCaptcha (UserId,Mobile,Captcha,SendTime,[Status]) VALUES(@UserId,@Mobile, @Captcha,@SendTime,@Status)
END
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@Mobile" dbType="String" direction="Input" size="11" />
      <param name="@Captcha" dbType="String" direction="Input" size="10" />
      <param name="@SendTime" dbType="DateTime" direction="Input" size="8" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>

  <dataCommand name="updateMobileByWxOpenId" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE [dbo].[User]
   SET [Mobile] = @Mobile
 WHERE WxOpenId=@WxOpenId
		]]>
    </commandText>
    <parameters>
      <param name="@Mobile" dbType="String" direction="Input" size="25" />
      <param name="@WxOpenId" dbType="String" direction="Input" size="50" />
    </parameters>
  </dataCommand>

  <dataCommand name="CheckMobileCaptcha" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
SELECT TOP 1 
 [Captcha]
  FROM [dbo].[UserCaptcha] where [Status]=0  --and DATEDIFF(n,SendTime,GETDATE())<5
  --and UserId=@UserId 
  and Mobile=@Mobile
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@WxOpenId" dbType="String" direction="Input" size="50" />
      <param name="@Mobile" dbType="String" direction="Input" size="11" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateUserCaptchaStatus" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
update [dbo].[UserCaptcha] set Status=1,UserId=@UserId where [Status]=0  and Mobile=@Mobile
		]]>
    </commandText>
    <parameters>
      <param name="@Mobile" dbType="String" direction="Input" size="11" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>

  <dataCommand name="FindByUserNameAndPassword" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
select top 1 * from [dbo].[BackstageUser]  where [UserName]=@UserName  and Password=@Password
		]]>
    </commandText>
    <parameters>
      <param name="@UserName" dbType="String" direction="Input" size="50" />
      <param name="@Password" dbType="String" direction="Input" size="100" />
    </parameters>
  </dataCommand>
  
    <dataCommand name="FindBackstageLoginUserByUserId" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
select top 1 * from [dbo].[BackstageUser]  where [UserId]=@UserId
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="String" direction="Input" size="50" />
    </parameters>
  </dataCommand>


  <dataCommand name="InsertQRCode" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
IF Not EXISTS(SELECT * FROM [dbo].[User] WHERE [WxOpenId] = @SourceCode)
      BEGIN
    INSERT INTO [QRCode]
           ([SourceName]
           ,[QRCodeUrl]
           ,[SourceCode]
           ,[Status]
           ,[CreateTime])
     VALUES
           (@SourceName
           ,@QRCodeUrl
           ,@SourceCode
           ,@Status
           ,@CreateTime
           )
      SELECT @@identity;
      END
		]]>
    </commandText>
    <parameters>
      <param name="@SourceName" dbType="String" direction="Input" size="10" />
      <param name="@QRCodeUrl" dbType="String" direction="Input" size="300" />
      <param name="@SourceCode" dbType="String" direction="Input" size="20" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
      <param name="@CreateTime" dbType="DateTime" direction="Input" size="8" />
    </parameters>
  </dataCommand>


  <dataCommand name="GetQRListByPage" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select *,(select COUNT(1) from [User](nolock) where QRCode.SourceCode=[user].SourceId) as SourceCount from dbo.[QRCode](NOLOCK)
),
PageDataSource
as 
(
select row_number() over (Order by CreateTime desc) as RowsId,*
from DataSource
)
select * from PageDataSource
where RowsId between (@PageIndex-1)*@PageSize and @PageIndex*@PageSize;
SELECT COUNT(1) FROM dbo.[QRCode](NOLOCK)
]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
    </parameters>
  </dataCommand>
  <dataCommand name="InsertPageLog" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO [dbo].[PageLog]
           ([IP]
           ,[PageSource])
     VALUES
           (@IP
           ,@PageSource)
]]>
    </commandText>
    <parameters>
      <param name="@IP" dbType="String" direction="Input" size="30" />
      <param name="@PageSource" dbType="String" direction="Input" size="10" />
    </parameters>
  </dataCommand>
  
</dataOperations>
