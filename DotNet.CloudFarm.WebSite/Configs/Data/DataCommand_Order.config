<?xml version="1.0"?>
<dataOperations>
    <dataCommand name="GetTopOrderList" connectionStringName="SqlServerData" commandType="Text">
        <commandText>
            <![CDATA[
with TopOrderSource 
as 
(
select UserId,SUM(ProductCount*p.Earning) as Total from OrderInfo(nolock) o 
inner join Product  p
on o.ProductId=p.Id
where o.Status=10
group by UserId
),
PageTopOrderSource
as
(
select row_number() over (Order by Total  desc) as RowsId, UserId,Total,Mobile,WxNickName,WxHeadUrl from TopOrderSource tops inner join [User] u on tops.UserId= u.ID
)
select * from PageTopOrderSource
where RowsId between ((@PageIndex-1)*@PageSize+1)and @PageIndex*@PageSize
		]]>
        </commandText>
      <parameters>
        <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
        <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
      </parameters>

    </dataCommand>
  
      <dataCommand name="InsertOrder" connectionStringName="SqlServerData" commandType="Text">
        <commandText>
            <![CDATA[
  DECLARE @StockResult int;
  DECLARE @Stock int;
  DECLARE @SaledCount int;
  Set @stockResult=-1;
  select @Stock=Stock,@SaledCount=SaledCount from [dbo].[Product] where [Id]=@ProductId;
  Begin tran submitorder
  INSERT INTO [dbo].[OrderInfo]
           ([OrderId]
           ,[UserId]
           ,[CreateTime]
           ,[ProductId]
           ,[ProductCount]
           ,[Price]
           ,[Status]
           ,[PayType])
     VALUES
           (@OrderId
           ,@UserId
           ,@CreateTime
           ,@ProductId
           ,@ProductCount
           ,@Price
           ,@Status
           ,@PayType);
  --if ((@SaledCount+@ProductCount)<=@Stock)
  --begin
    --update [dbo].[Product] set [SaledCount]=[SaledCount]+@ProductCount where [Id]=@ProductId;
    --set @StockResult=1;
  --end
  -- or @StockResult=-1
  if (@@error<>0)
  begin
    rollback tran;
  end
  else
  begin
    commit tran;
  end
		]]>
        </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@ProductId" dbType="Int32" direction="Input" size="4" />
      <param name="@ProductCount" dbType="Int32" direction="Input" size="4" />
      <param name="@Price" dbType="Decimal" direction="Input" size="18" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
      <param name="@PayType" dbType="Int32" direction="Input" size="4" />
      <param name="@CreateTime" dbType="DateTime" direction="Input" size="8" />
    </parameters>
        
    </dataCommand>




  <dataCommand name="GetOrder" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
SELECT TOP 1 [OrderId]
      ,[UserId]
      ,[CreateTime]
      ,[ProductId]
      ,[ProductCount]
      ,[Price]
      ,[Status]
      ,[PayType]
      ,[SendUserId]
      ,[SendDate]
      ,[SendRemark]
  FROM [dbo].[OrderInfo] Where OrderId=@OrderId and UserId=@UserId;
		]]>
    </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>
  <dataCommand name="GetOrderViewModel" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
select TOP 1 o.*,p.ProductName,o.Price*o.ProductCount as TotalMoney from OrderInfo(nolock) o inner join Product(nolock) p
on o.ProductId=p.Id
Where OrderId=@OrderId and UserId=@UserId;
		]]>
    </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>

  <dataCommand name="GetNewOrderId" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @LastNum bigint,@Currdate int
                            SET @Currdate=CONVERT(varchar(10),GETDATE(),12)
	                        update FrameCode
	                        set @LastNum=LastNum=LastNum+1
	                        where Currdate=@Currdate
	                        AND CType='Order'
                            if(@@RowCount=0)
                            BEGIN                           
                            SET @LastNum=0
                            WHILE(len(@LastNum)!=6 or @LastNum>990000)
                            begin
                            select @LastNum =cast(ceiling(rand() * 1000000) as int)
                            end
                            insert INTO FrameCode VALUES(@Currdate,'Order','',@LastNum)
                            end
                            SELECT '81'+cast(@Currdate AS varchar(6))+Cast(@LastNum as varchar(6))

		]]>
    </commandText>

  </dataCommand>

  <dataCommand name="GetOrderList" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select o.*,p.ProductName,P.ImgUrl,p.EarningDay,p.StartTime,p.EndTime from OrderInfo(nolock) o inner join Product(nolock) p
on o.ProductId=p.Id
WHERE (UserId=@UserId and o.SendUserId is null) or (o.SendUserId=@UserId)
),
PageDataSource
as 
(
select row_number() over (Order by CreateTime desc) as RowsId,*,Price*ProductCount as TotalMoney,(select COUNT(1) from DataSource) as TotalOrderCount  from DataSource
)
select * from PageDataSource
where RowsId between ((@PageIndex-1)*@PageSize+1) and @PageIndex*@PageSize
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>

  <dataCommand name="GetGiftOrderList" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select o.*,p.ProductName,P.ImgUrl,p.EarningDay,p.StartTime,p.EndTime from OrderInfo(nolock) o inner join Product(nolock) p
on o.ProductId=p.Id
WHERE {0}
),
PageDataSource
as 
(
select row_number() over (Order by CreateTime desc) as RowsId,*,Price*ProductCount as TotalMoney,(select COUNT(1) from DataSource) as TotalOrderCount  from DataSource
)
select * from PageDataSource
where RowsId between ((@PageIndex-1)*@PageSize+1) and @PageIndex*@PageSize
		]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>

  <dataCommand name="GetOrderListAll" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
with DataSource
as
(
select op.*, u.Mobile from  (
select o.*,p.ProductName from OrderInfo(nolock) o inner join Product(nolock) p
on o.ProductId=p.Id
) op
inner join [User](NOLOCK) u
on op.UserId=u.ID
),
PageDataSource
as 
(
select row_number() over (Order by CreateTime desc) as RowsId,*,Price*ProductCount as TotalMoney  from DataSource
)
select * from PageDataSource
where RowsId between (@PageIndex-1)*@PageSize and @PageIndex*@PageSize;
select COUNT(1) from  (
select o.*,p.ProductName from OrderInfo(nolock) o inner join Product(nolock) p
on o.ProductId=p.Id
) op
inner join [User](NOLOCK) u
on op.UserId=u.ID
		]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>
  <dataCommand name="UpdateOrderStatus" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE [dbo].[OrderInfo]
SET [Status] = @Status
WHERE OrderId=@OrderId And UserId=@UserId
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>

  <dataCommand name="GetOrderListWithCondition" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
    with DataSource
    as
    (
    select op.*, u.Mobile from  (
    select o.*, (select COUNT(1) from WeixinPayLog(NOLOCK) wpl where wpl.[status]=1 and wpl.OrderId=o.OrderId
    ) PayLogCount,p.ProductName from OrderInfo(nolock) o inner join Product(nolock) p
    on o.ProductId=p.Id
    ) op
    inner join [User](NOLOCK) u
    on op.UserId=u.ID
    WHERE 1=1 {0}
    ),
    PageDataSource
    as 
    (
    select row_number() over (Order by CreateTime desc) as RowsId,*,Price*ProductCount as TotalMoney,(select COUNT(1) from DataSource) as TotalOrderCount  from DataSource
    )
    select * from PageDataSource
    where RowsId between ((@PageIndex-1)*@PageSize+1) and @PageIndex*@PageSize
		]]>
    </commandText>
    <parameters>
      <param name="@PageIndex" dbType="Int32" direction="Input" size="4" />
      <param name="@PageSize" dbType="Int32" direction="Input" size="4" />
      <param name="@StartTime" dbType="DateTime" direction="Input" size="8" />
      <param name="@EndTime" dbType="DateTime" direction="Input" size="8" />
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@Mobile" dbType="String" direction="Input" size="25" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />


    </parameters>

  </dataCommand>
  
<dataCommand name="GetProductCountWithStatus" connectionStringName="SqlServerData" commandType="Text">
  <commandText>
    <![CDATA[
select SUM(ProductCount) from OrderInfo(nolock) where UserId=@UserId and [Status] in ({0});
		]]>
  </commandText>
  <parameters>
    <param name="@UserId" dbType="Int32" direction="Input" size="4" />
  </parameters>

</dataCommand>

  <dataCommand name="InsertOrderPay" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
  if not exists(select * from [dbo].[OrderPayLog] where PayId=@PayId)
  begin
  
  INSERT INTO [dbo].[OrderPayLog]
           ([PayId]
           ,[OrderId]
           ,[UserId]
           ,[Status]
           ,[CreateTime])
     VALUES
           (@PayId
           ,@OrderId
           ,@UserId
           ,@Status
           ,@CreateTime)
  
  end

		]]>
    </commandText>
    <parameters>
      <param name="@PayId" dbType="String" direction="Input" size="100" />
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
      <param name="@CreateTime" dbType="DateTime" direction="Input" size="8" />
    </parameters>

  </dataCommand>

  <dataCommand name="UpdateOrderPay" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @SaledCount int;
      DECLARE @ProductId int;
      SELECT @SaledCount=ProductCount,@ProductId=ProductId from [dbo].[OrderInfo] where OrderId=@OrderId
      UPDATE [dbo].[OrderPayLog] SET [Status] = @Status,[EditTime] = GETDATE() WHERE OrderId = @OrderId;
      UPDATE [dbo].[OrderInfo] SET [Status] = @Status WHERE OrderId=@OrderId;
      UPDATE Product SET SaledCount=SaledCount+@SaledCount where Id=@ProductId
		]]>
    </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@Status" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>

  <dataCommand name="GetUserAllOrder" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
SELECT  o.*
      ,p.ProductName
      ,p.Earning
      ,p.EarningDay
      ,p.EarningRate
      ,p.StartTime
      ,p.EndTime
      ,p.YearEarningRate
  FROM [dbo].[OrderInfo] o inner join [dbo].[Product] p
  on o.ProductId=p.Id
  where o.UserId=@UserId and o.[Status] in ({0})
		]]>
    </commandText>
    <parameters>
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>

  <dataCommand name="GetOrderStatis" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
/****** Script for SelectTopNRows command from SSMS  ******/
with dataSource
as
(
SELECT [UserId],Count([ProductCount]*[Price]) as TotalMoney
FROM [yangke].[dbo].[OrderInfo] 
where [Status] in ({0})
group by UserId
)
select ROW_NUMBER() over (order by TotalMoney asc) as RowId,UserId,TotalMoney,(select COUNT(1) from dataSource) as Total from dataSource;

		]]>
    </commandText>

  </dataCommand>

  <dataCommand name="UpdateOrderPayType" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
update dbo.[OrderInfo] set PayType=@PayType where OrderId=@OrderId and UserId=@UserId
		]]>
    </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@PayType" dbType="Int32" direction="Input" size="4" />
    </parameters>

  </dataCommand>


  <dataCommand name="CheckOrderExist" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
SELECT count(*)
  FROM [dbo].[OrderInfo] Where OrderId=@OrderId;
		]]>
    </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
    </parameters>
  </dataCommand>

  <dataCommand name="SendGift" connectionStringName="SqlServerData" commandType="Text">
    <commandText>
      <![CDATA[
update dbo.[OrderInfo] set SendUserId=@SendUserId,SendDate=@SendDate where OrderId=@OrderId and UserId=@UserId
		]]>
    </commandText>
    <parameters>
      <param name="@OrderId" dbType="Int64" direction="Input" size="8" />
      <param name="@UserId" dbType="Int32" direction="Input" size="4" />
      <param name="@SendUserId" dbType="Int32" direction="Input" size="4" />
      <param name="@SendDate" dbType="DateTime" direction="Input" size="8" />
    </parameters>

  </dataCommand>
  

</dataOperations>
