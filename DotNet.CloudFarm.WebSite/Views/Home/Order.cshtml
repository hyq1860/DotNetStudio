@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "确认订单";
}
@using DotNet.Common.Utility
@model DotNet.CloudFarm.Domain.ViewModel.ConfirmOrderViewModel
<div class="sheep_guest purchase_claim">
    <section class="purchase_claim_section1">
        <!--ko with:Product-->
        <div class="purchase_claim_section1box">
            <h3><span><!--ko text:Name--><!--/ko--></span></h3>
            <div class="periods clearfix">
                <div class="periods_l"><img src="/images/no_pic.jpg" data-bind="attr:{src:ImgUrl}">
                </div>
                <div class="periods_r">
                    <p>品种：<span><!--ko text:SheepType--><!--/ko--></span></p>
                    <p>单价：<span><em><!--ko text:Price--><!--/ko--></em>/只</span></p>
                    <p>认购期限：<span><em><!--ko text:StartTime--><!--/ko--></em>至<em><!--ko text:EndTime--><!--/ko--></em></span></p>
                    <p style="margin-bottom: 0px;">剩余数量：<span><!--ko text:ExistCount--><!--/ko-->只</span></p>
                </div>
            </div>
            <div class="left_sheep">
                <div class="left_sheep_content">
                    <!--<p class="p1 clearfix"><span class="span1">剩余数量</span><span class="span2">1000只</span></p>-->
                    <div class="order_numbox clearfix">
                        <div class="order_num">
                            <div class="order_num_l">订购数量</div>
                            <div class="order_num_r clearfix"><span class="span1" data-bind="click:$parent.ReduceCount">-</span><input type="tel" class="center" min="1" placeholder="" data-bind="value:$parent.Count,attr:{max:ExistCount}"><span class="span2" data-bind="click:$parent.AddCount">+</span></div>
                             <!--点击加减数量以后增加一个背景为灰色的class名称span2_visited-->
                        </div>
                        <p class="p1 clearfix"><span class="span1">合计</span><span class="span2"><!--ko text:$parent.TotalPrice--><!--/ko-->元</span></p>
                    </div>

                </div>
            </div>
        </div>
        <!--/ko-->
    </section>

    <div class="ranking_List"><div class="ranking_List_box">累计收益排行榜</div></div>
    <section class="purchase_claim_section2">
        <ul data-bind="foreach:BuyTops">
            <!--ko if:$index()<=2-->
            <li class="li1 clearfix" data-bind="css:'li'+($index()+1)"><i class="iconfont"></i><img src="/images/tx2.png" data-bind="attr:{src:HeadUrl}"><span class="span1"><!--ko text:WxNickName--><!--/ko--></span><span class="span2"><!--ko text:Total--><!--/ko-->元</span></li>
            <!--/ko-->
            <!--ko if:$index()>2 &&$index()<=4-->
            <li class="clearfix"><span class="ranking_num" data-bind="text:($index()+1)"></span><img src="/images/tx2.png" data-bind="attr:{src:HeadUrl}"><span class="span1"><!--ko text:WxNickName--><!--/ko--></span><span class="span2"><!--ko text:Total--><!--/ko-->元</span></li>
            <!--/ko-->
            <!--ko if:$index()>4-->
            <li class="clearfix" style="display:none"><span class="ranking_num" data-bind="text:($index()+1)"></span><img src="/images/tx2.png" data-bind="attr:{src:HeadUrl}"><span class="span1"><!--ko text:WxNickName--><!--/ko--></span><span class="span2"><!--ko text:Total--><!--/ko-->元</span></li>
            <!--/ko-->
            @*<li class="li2 clearfix"><i class="iconfont"></i><img src="/images/tx2.png"><span class="span1">18510251039</span><span class="span2">1000只</span></li>
            <li class="li3 clearfix"><i class="iconfont"></i><img src="/images/tx2.png"><span class="span1">18510251039</span><span class="span2">1000只</span></li>*@
            @*<li class="clearfix"><span class="ranking_num">4</span><img src="/images/tx2.png"><span class="span1">18510251039</span><span class="span2">1000只</span></li>*@
        </ul>
        <!--ko if:BuyTops().length>5-->
        
        <div class="loading_more"><a href="javascript:void(0);" data-bind="click:LoadMore">加载更多</a>
        </div>
        <!--/ko-->
    </section>

    <section class="purchase_claim_section3">
        <div class="pk_box clearfix">
            <div class="pk_box_l">
                <p class="p1">您的累计收益</p>
                <p class="p2"><!--ko text:Earning--><!--/ko-->元</p>
            </div>
            <div class="pk_box_m">

            </div>
            <div class="pk_box_r">
                <p class="p1">打败全国羊客中的</p>
                <p class="p2"><!--ko text:Percentage--><!--/ko-->%</p>
            </div>
        </div>
    </section>
    <div class="read_agree clearfix"><label><span class="" data-bind="css:CheckClass(),click:ChooseAgreeContract"></span>
        <span class="span2">阅读并同意<a href="@Url.Action("Contract","Home")" target="_blank" style="color:#3388ff;">《用户协议》</a></span></label></div><!--当同意协议时 使用agree_ment的类名-->
    <div class="sure_book"><a href="#" data-bind="click:SubmitOrder">提交订单</a></div>
</div>

<script type="text/javascript">
    
    function OrderViewModel() {
        var self = this;

       

        self.Earning = ko.observable();

        self.Percentage = ko.observable();

        //购买的商品
        self.Product = ko.observable();

        //认购排行榜
        self.BuyTops = ko.observableArray([]);

        //购买数量
        self.Count = ko.observable(1);



        self.AddCount=function() {
            var currentCount = self.Count();
            
            console.log(currentCount);
            currentCount++;
            //debugger;
            if (currentCount * self.Product.Price() > 50000) {
                alert("一次最多购买50000元。");
                return;
            }
            if (currentCount>=self.Product.ExistCount()) {
                currentCount = self.Product.ExistCount();
            } else {
                self.Count(currentCount);
            }
        }

        //是否同意合同
        self.AgreeContract = ko.observable(true);

        //同意选中的class
        self.CheckClass=function() {
            return self.AgreeContract() ? "agree_ment": "no_agree";
        }

        //选中合同
        self.ChooseAgreeContract=function() {
            debugger;
            if (self.AgreeContract()) {
                self.AgreeContract(false);
            } else {
                self.AgreeContract(true);
            }
        }
        
        //总计金额
        self.TotalPrice = ko.pureComputed(function() {
            return toDecimal2(self.Count() * self.Product.Price());
        });
        
        self.LoadMore = function(){
            $(".clearfix").show();
            $(".loading_more").hide();
        };

        self.ReduceCount=function() {
            var currentCount = self.Count();
            if (currentCount <= 1) {
                self.Count(1);
            } else {
                self.Count(--currentCount);
            }
        }

        //提交订单
        self.SubmitOrder=function() {
            if (!self.AgreeContract()) {
                alert("请选择同意用户协议");
                return;
            }
            if (self.Count() < 1) {
                alert("最少认购一只");
                return;
            }
            if (self.Count() > self.Product.ExistCount()) {
                alert("您的认购数量超出剩余认购数量");
                return;
            }
            //console.log(ko.toJSON(self));
            confirmOrderServiceJson.Count = self.Count();
            $.ajax({
                url: "/home/SubmitOrder",
                type: "post",
                data: confirmOrderServiceJson,
                success: function (result) {
                    console.log(result);
                    if (result) {
                        if (result.Status.Code == "1") {
                            location.href = "@Url.Action("Pay","Home")"+"?OrderId="+result.Data.OrderId;
                        }
                        else if (result.Status.Code == "0") {
                            alert(result.Status.Message);
                        }

                    }
                }
            });
        }
    }

    function OrderProductViewModel() {
        var self = this;

        self.Name = ko.observable();

        //羊类型
        self.SheepType = ko.observable();

        //羊价格
        self.Price = ko.observable();

        //库存
        self.Stock = ko.observable();

        //销量
        self.SaledCount = ko.observable();

        

        //剩余数量
        self.ExistCount= ko.observable();
        //self.ExistCount = ko.pureComputed(function() {
        //    return self.Stock() - self.SaledCount();
        //});

        //购买数量
        self.Count = ko.observable();

        //开始时间
        self.StartTime = ko.observable();

        //结束时间
        self.EndTime = ko.observable();

        //self.TotalPrice = ko.pureComputed(function() {
        //    return self.Count() * self.SheepPrice();
        //});

        //商品图片
        self.ImgUrl = ko.observable();
    }

    function BuyTopViewModel() {
        var self = this;

        //排名名次
        self.Rank = ko.observable();

        //头像
        self.HeadUrl = ko.observable();

        //认购者姓名
        self.WxNickName = ko.observable();

        //认购者数量
        self.BuyCount = ko.observable();
    }
    var confirmOrderServiceJson=@Html.Raw(JsonHelper.ToJson(Model, "yyyy-MM-dd HH:mm:ss"));
    $(function() {
        $(".order_num_r .span1,.order_num_r .span2").each(function(i){
            $(this).mousedown(function(){
                $(this).addClass("span2_visited");
            }).mouseup(function(){
                $(this).removeClass("span2_visited");

            });
        });

        if (confirmOrderServiceJson) {
            var orderViewModel = new OrderViewModel();
            if (confirmOrderServiceJson.Product) {
                var product = new OrderProductViewModel();
                product.Name(confirmOrderServiceJson.Product.Name);
                product.SheepType(confirmOrderServiceJson.Product.SheepType);

                product.Price(confirmOrderServiceJson.Product.Price);
                //库存
                product.Stock(confirmOrderServiceJson.Product.Stock);

                //销量
                product.SaledCount(confirmOrderServiceJson.Product.SaledCount);

                product.ExistCount(confirmOrderServiceJson.Product.ExistCount);
                //开始时间
                product.StartTime(confirmOrderServiceJson.Product.StartTime);

                //结束时间
                product.EndTime(confirmOrderServiceJson.Product.EndTime);

                product.ImgUrl(confirmOrderServiceJson.Product.ImgUrl);
                product.Count(1);
                orderViewModel.Count(1);
                orderViewModel.Product=product;
            }

            orderViewModel.Earning(confirmOrderServiceJson.Earning);

            orderViewModel.Percentage(confirmOrderServiceJson.Percentage);

            orderViewModel.BuyTops(confirmOrderServiceJson.TopOrderInfos);
            ko.applyBindings(orderViewModel);
        }
    });

</script>